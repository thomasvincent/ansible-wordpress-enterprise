---
# Fail2ban configuration tasks

- name: Install fail2ban
  ansible.builtin.package:
    name: fail2ban
    state: present
  tags:
    - wordpress:fail2ban
    - wordpress:security

- name: Create fail2ban configuration directory
  ansible.builtin.file:
    path: /etc/fail2ban/jail.d
    state: directory
    owner: root
    group: root
    mode: '0755'
  tags:
    - wordpress:fail2ban
    - wordpress:config

- name: Create fail2ban filter directory
  ansible.builtin.file:
    path: /etc/fail2ban/filter.d
    state: directory
    owner: root
    group: root
    mode: '0755'
  tags:
    - wordpress:fail2ban
    - wordpress:config

- name: Configure fail2ban main settings
  ansible.builtin.template:
    src: fail2ban-jail.local.j2
    dest: /etc/fail2ban/jail.local
    owner: root
    group: root
    mode: '0644'
    backup: true
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:config

- name: Create WordPress-specific fail2ban jail
  ansible.builtin.template:
    src: fail2ban-wordpress.conf.j2
    dest: /etc/fail2ban/jail.d/wordpress.conf
    owner: root
    group: root
    mode: '0644'
    backup: true
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:config

- name: Create WordPress login filter
  ansible.builtin.template:
    src: fail2ban-wordpress-auth.conf.j2
    dest: /etc/fail2ban/filter.d/wordpress-auth.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:filters

- name: Create WordPress XMLRPC filter
  ansible.builtin.template:
    src: fail2ban-wordpress-xmlrpc.conf.j2
    dest: /etc/fail2ban/filter.d/wordpress-xmlrpc.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:filters

- name: Create WordPress brute force filter
  ansible.builtin.template:
    src: fail2ban-wordpress-bruteforce.conf.j2
    dest: /etc/fail2ban/filter.d/wordpress-bruteforce.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:filters

- name: Create WordPress admin access filter
  ansible.builtin.template:
    src: fail2ban-wordpress-admin.conf.j2
    dest: /etc/fail2ban/filter.d/wordpress-admin.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:filters

- name: Create WordPress plugin vulnerability filter
  ansible.builtin.template:
    src: fail2ban-wordpress-plugins.conf.j2
    dest: /etc/fail2ban/filter.d/wordpress-plugins.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:filters

- name: Create WordPress comment spam filter
  ansible.builtin.template:
    src: fail2ban-wordpress-spam.conf.j2
    dest: /etc/fail2ban/filter.d/wordpress-spam.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:filters

- name: Create web server specific fail2ban configuration (Nginx)
  ansible.builtin.template:
    src: fail2ban-nginx.conf.j2
    dest: /etc/fail2ban/jail.d/nginx.conf
    owner: root
    group: root
    mode: '0644'
  when: wordpress_web_server == 'nginx'
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:nginx

- name: Create web server specific fail2ban configuration (Apache)
  ansible.builtin.template:
    src: fail2ban-apache.conf.j2
    dest: /etc/fail2ban/jail.d/apache.conf
    owner: root
    group: root
    mode: '0644'
  when: wordpress_web_server == 'apache'
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:apache

- name: Create SSH protection jail
  ansible.builtin.template:
    src: fail2ban-ssh.conf.j2
    dest: /etc/fail2ban/jail.d/ssh.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:ssh

- name: Create database protection jail
  ansible.builtin.template:
    src: fail2ban-database.conf.j2
    dest: /etc/fail2ban/jail.d/database.conf
    owner: root
    group: root
    mode: '0644'
  when: not wordpress_use_external_db | bool
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:database

- name: Create custom action for WordPress attacks
  ansible.builtin.template:
    src: fail2ban-wordpress-action.conf.j2
    dest: /etc/fail2ban/action.d/wordpress-action.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:actions

- name: Create custom action for email notifications
  ansible.builtin.template:
    src: fail2ban-email-action.conf.j2
    dest: /etc/fail2ban/action.d/email-notify.conf
    owner: root
    group: root
    mode: '0644'
  when: wordpress_smtp_enabled | bool
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:actions

- name: Create fail2ban log monitoring script
  ansible.builtin.template:
    src: fail2ban-monitor.sh.j2
    dest: /usr/local/bin/fail2ban-monitor.sh
    owner: root
    group: root
    mode: '0755'
  tags:
    - wordpress:fail2ban
    - wordpress:monitoring

- name: Create fail2ban whitelist management script
  ansible.builtin.template:
    src: fail2ban-whitelist.sh.j2
    dest: /usr/local/bin/fail2ban-whitelist.sh
    owner: root
    group: root
    mode: '0755'
  tags:
    - wordpress:fail2ban
    - wordpress:management

- name: Create fail2ban status script
  ansible.builtin.template:
    src: fail2ban-status.sh.j2
    dest: /usr/local/bin/fail2ban-status.sh
    owner: root
    group: root
    mode: '0755'
  tags:
    - wordpress:fail2ban
    - wordpress:monitoring

- name: Configure fail2ban logrotate
  ansible.builtin.template:
    src: logrotate-fail2ban.j2
    dest: /etc/logrotate.d/fail2ban
    owner: root
    group: root
    mode: '0644'
  tags:
    - wordpress:fail2ban
    - wordpress:logging

- name: Add trusted IPs to fail2ban ignore list
  ansible.builtin.lineinfile:
    path: /etc/fail2ban/jail.local
    regexp: '^ignoreip\s*='
    line: "ignoreip = 127.0.0.1/8 ::1 {{ wordpress_allowed_ips | join(' ') }}"
    backup: true
  when: wordpress_allowed_ips | length > 0
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:whitelist

- name: Enable and start fail2ban service
  ansible.builtin.systemd:
    name: fail2ban
    state: started
    enabled: true
  tags:
    - wordpress:fail2ban
    - wordpress:service

- name: Create fail2ban monitoring cron job
  ansible.builtin.cron:
    name: "Fail2ban Monitor"
    minute: "*/10"
    job: "/usr/local/bin/fail2ban-monitor.sh >> /var/log/fail2ban-monitor.log 2>&1"
    user: root
  tags:
    - wordpress:fail2ban
    - wordpress:monitoring

- name: Create daily fail2ban status report
  ansible.builtin.cron:
    name: "Fail2ban Daily Status"
    minute: "0"
    hour: "9"
    job: "/usr/local/bin/fail2ban-status.sh >> /var/log/fail2ban-status.log 2>&1"
    user: root
  tags:
    - wordpress:fail2ban
    - wordpress:monitoring

# Advanced fail2ban configurations

- name: Configure fail2ban for distributed attacks
  ansible.builtin.template:
    src: fail2ban-distributed.conf.j2
    dest: /etc/fail2ban/jail.d/distributed.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:advanced

- name: Create geographic IP blocking filter
  ansible.builtin.template:
    src: fail2ban-geoip.conf.j2
    dest: /etc/fail2ban/filter.d/geoip-block.conf
    owner: root
    group: root
    mode: '0644'
  when: wordpress_enable_geoip_blocking | default(false) | bool
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:geoip

- name: Configure fail2ban for cloud provider protection
  ansible.builtin.template:
    src: "fail2ban-{{ wordpress_cloud_provider }}.conf.j2"
    dest: "/etc/fail2ban/jail.d/{{ wordpress_cloud_provider }}.conf"
    owner: root
    group: root
    mode: '0644'
  when: 
    - wordpress_cloud_provider != 'none'
    - wordpress_cloud_provider is defined
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:cloud

- name: Create fail2ban API endpoint protection
  ansible.builtin.template:
    src: fail2ban-api.conf.j2
    dest: /etc/fail2ban/filter.d/wordpress-api.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:api

- name: Configure fail2ban for REST API protection
  ansible.builtin.template:
    src: fail2ban-rest-api.conf.j2
    dest: /etc/fail2ban/jail.d/wordpress-rest-api.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart fail2ban
  tags:
    - wordpress:fail2ban
    - wordpress:api

# Testing and verification

- name: Test fail2ban configuration
  ansible.builtin.command:
    cmd: fail2ban-client -t
  register: fail2ban_test
  changed_when: false
  failed_when: fail2ban_test.rc != 0
  tags:
    - wordpress:fail2ban
    - wordpress:test

- name: Check fail2ban status
  ansible.builtin.command:
    cmd: fail2ban-client status
  register: fail2ban_status
  changed_when: false
  tags:
    - wordpress:fail2ban
    - wordpress:test

- name: Get active fail2ban jails
  ansible.builtin.command:
    cmd: fail2ban-client status
  register: fail2ban_jails
  changed_when: false
  tags:
    - wordpress:fail2ban
    - wordpress:verify

- name: Display fail2ban configuration summary
  ansible.builtin.debug:
    msg:
      - "Fail2ban is active and running"
      - "Maximum retry attempts: {{ wordpress_fail2ban_maxretry }}"
      - "Find time window: {{ wordpress_fail2ban_findtime }}"
      - "Ban time duration: {{ wordpress_fail2ban_bantime }}"
      - "Active jails: {{ fail2ban_jails.stdout_lines | select('match', '.*Jail list:.*') | list }}"
  tags:
    - wordpress:fail2ban
    - wordpress:verify

- name: Test WordPress jail functionality
  ansible.builtin.command:
    cmd: fail2ban-client status wordpress-auth
  register: wordpress_jail_status
  changed_when: false
  failed_when: false
  tags:
    - wordpress:fail2ban
    - wordpress:test

- name: Verify fail2ban log accessibility
  ansible.builtin.stat:
    path: /var/log/fail2ban.log
  register: fail2ban_log
  tags:
    - wordpress:fail2ban
    - wordpress:verify

- name: Display fail2ban verification results
  ansible.builtin.debug:
    msg:
      - "Configuration test: {{ 'PASSED' if fail2ban_test.rc == 0 else 'FAILED' }}"
      - "Service status: {{ 'RUNNING' if 'fail2ban is running' in fail2ban_status.stdout else 'STOPPED' }}"
      - "WordPress jail: {{ 'ACTIVE' if wordpress_jail_status.rc == 0 else 'INACTIVE' }}"
      - "Log file exists: {{ 'YES' if fail2ban_log.stat.exists else 'NO' }}"
  tags:
    - wordpress:fail2ban
    - wordpress:verify
# Nginx configuration for WordPress
# Generated by Ansible - Do not edit manually

# Upstream PHP-FPM
upstream php-fpm {
    server unix:{{ wordpress_php_fpm_listen }};
}

{% if wordpress_enable_ssl %}
# HTTP to HTTPS redirect
server {
    listen {{ wordpress_http_port }};
    listen [::]:{{ wordpress_http_port }};
    server_name {{ wordpress_server_name }};

    # ACME challenge for Let's Encrypt
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/letsencrypt;
    }

    location / {
        return 301 https://$server_name$request_uri;
    }
}
{% endif %}

# Main server block
server {
{% if wordpress_enable_ssl %}
    listen {{ wordpress_https_port }} ssl http2;
    listen [::]:{{ wordpress_https_port }} ssl http2;

    # SSL Configuration
    ssl_certificate {{ wordpress_ssl_certificate }};
    ssl_certificate_key {{ wordpress_ssl_certificate_key }};
    ssl_protocols {{ wordpress_ssl_protocols }};
    ssl_ciphers {{ wordpress_ssl_ciphers }};
    ssl_prefer_server_ciphers {{ 'on' if wordpress_ssl_prefer_server_ciphers else 'off' }};
    ssl_session_timeout {{ wordpress_ssl_session_timeout }};
    ssl_session_cache {{ wordpress_ssl_session_cache }};
    {% if wordpress_ssl_stapling %}
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate {{ wordpress_ssl_certificate }};
    {% endif %}

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
{% else %}
    listen {{ wordpress_http_port }};
    listen [::]:{{ wordpress_http_port }};
{% endif %}

    server_name {{ wordpress_server_name }};
    root {{ wordpress_install_dir }};
    index index.php index.html index.htm;

    # Logging
    access_log {{ wordpress_access_log }};
    error_log {{ wordpress_error_log }};

    # Client settings
    client_max_body_size {{ wordpress_php_upload_max_filesize }};
    client_body_timeout 60s;
    client_header_timeout 60s;

{% if wordpress_cloud_provider == 'cloudflare' %}
    # Cloudflare real IP
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2c0f:f248::/32;
    set_real_ip_from 2a06:98c0::/29;
    real_ip_header CF-Connecting-IP;
{% elif wordpress_cloud_provider in ['digitalocean', 'google', 'azure', 'oracle'] %}
    # Cloud provider real IP
    real_ip_header X-Forwarded-For;
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;
{% endif %}

    # WordPress rewrite rules
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # PHP processing
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php-fpm;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;

        # Timeouts
        fastcgi_read_timeout {{ wordpress_php_max_execution_time }};
        fastcgi_send_timeout {{ wordpress_php_max_execution_time }};

        # Buffer sizes
        fastcgi_buffer_size 128k;
        fastcgi_buffers 256 16k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;

{% if wordpress_enable_redis or wordpress_enable_memcached %}
        # Caching headers
        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;
        fastcgi_cache WORDPRESS;
        fastcgi_cache_valid 200 60m;
        fastcgi_cache_methods GET HEAD;
        add_header X-FastCGI-Cache $upstream_cache_status;
{% endif %}
    }

    # Cache static files
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires max;
        log_not_found off;
        access_log off;
        add_header Cache-Control "public, immutable";
    }

    # Security: Deny access to sensitive files
    location ~ /\.(?!well-known).* {
        deny all;
    }

    location = /xmlrpc.php {
        deny all;
    }

    location ~* /(?:uploads|files)/.*\.php$ {
        deny all;
    }

    location ~ ^/wp-content/uploads/.*\.(php|php5|phps|phtml|phar)$ {
        deny all;
    }

    # Deny access to wp-config.php
    location ~ /wp-config\.php {
        deny all;
    }

    # Deny access to sensitive WordPress files
    location ~ ^/(readme|license|wp-config-sample)\.php {
        deny all;
    }

    # Block access to wp-includes
    location ~* ^/wp-includes/.*\.php$ {
        deny all;
    }

    # Allow only specific files in wp-admin
    location ~* /wp-admin/.*\.php$ {
        try_files $uri =404;
        fastcgi_pass php-fpm;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # Prevent version information disclosure
    location = /readme.html {
        deny all;
    }

    location = /license.txt {
        deny all;
    }

{% if wordpress_enable_redis or wordpress_enable_memcached %}
    # Skip cache for specific conditions
    set $skip_cache 0;

    # POST requests and URLs with query strings should always go to PHP
    if ($request_method = POST) {
        set $skip_cache 1;
    }
    if ($query_string != "") {
        set $skip_cache 1;
    }

    # Don't cache URIs containing the following segments
    if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {
        set $skip_cache 1;
    }

    # Don't use the cache for logged-in users or recent commenters
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
        set $skip_cache 1;
    }
{% endif %}

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
    gzip_disable "msie6";

    # Brotli compression (if available)
    {% if ansible_distribution == 'Ubuntu' and ansible_distribution_major_version | int >= 20 %}
    brotli on;
    brotli_comp_level 6;
    brotli_types text/plain text/css application/json application/javascript text/xml application/xml+rss text/javascript application/x-javascript image/svg+xml;
    {% endif %}
}

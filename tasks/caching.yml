---
# Caching configuration tasks (Redis/Memcached)

- name: Install Redis server
  ansible.builtin.package:
    name: "{{ wordpress_redis_packages }}"
    state: present
  when:
    - wordpress_enable_redis | bool
    - not wordpress_use_external_cache | bool
  notify: restart redis
  tags:
    - wordpress:caching
    - wordpress:redis

- name: Configure Redis server
  ansible.builtin.template:
    src: redis.conf.j2
    dest: "{{ wordpress_redis_config_path }}"
    owner: root
    group: root
    mode: '0644'
    backup: true
  when:
    - wordpress_enable_redis | bool
    - not wordpress_use_external_cache | bool
  notify: restart redis
  tags:
    - wordpress:caching
    - wordpress:redis

- name: Set Redis password (if configured)
  ansible.builtin.lineinfile:
    path: "{{ wordpress_redis_config_path }}"
    regexp: '^#?\s*requirepass'
    line: "requirepass {{ wordpress_redis_password }}"
    backup: true
  when:
    - wordpress_enable_redis | bool
    - not wordpress_use_external_cache | bool
    - wordpress_redis_password | length > 0
  notify: restart redis
  tags:
    - wordpress:caching
    - wordpress:redis

- name: Configure Redis memory settings
  ansible.builtin.lineinfile:
    path: "{{ wordpress_redis_config_path }}"
    regexp: '^#?\s*{{ item.key }}'
    line: "{{ item.key }} {{ item.value }}"
    backup: true
  loop:
    - { key: 'maxmemory', value: '256mb' }
    - { key: 'maxmemory-policy', value: 'allkeys-lru' }
    - { key: 'save', value: '900 1' }
    - { key: 'save', value: '300 10' }
    - { key: 'save', value: '60 10000' }
  when:
    - wordpress_enable_redis | bool
    - not wordpress_use_external_cache | bool
  notify: restart redis
  tags:
    - wordpress:caching
    - wordpress:redis

- name: Enable and start Redis service
  ansible.builtin.systemd:
    name: "{{ wordpress_redis_service }}"
    enabled: true
    state: started
  when:
    - wordpress_enable_redis | bool
    - not wordpress_use_external_cache | bool
  tags:
    - wordpress:caching
    - wordpress:redis

- name: Install Memcached server
  ansible.builtin.package:
    name: "{{ wordpress_memcached_packages }}"
    state: present
  when:
    - wordpress_enable_memcached | bool
    - not wordpress_use_external_cache | bool
  notify: restart memcached
  tags:
    - wordpress:caching
    - wordpress:memcached

- name: Configure Memcached
  ansible.builtin.template:
    src: memcached.conf.j2
    dest: "{{ wordpress_memcached_config_path }}"
    owner: root
    group: root
    mode: '0644'
    backup: true
  when:
    - wordpress_enable_memcached | bool
    - not wordpress_use_external_cache | bool
  notify: restart memcached
  tags:
    - wordpress:caching
    - wordpress:memcached

- name: Enable and start Memcached service
  ansible.builtin.systemd:
    name: "{{ wordpress_memcached_service }}"
    enabled: true
    state: started
  when:
    - wordpress_enable_memcached | bool
    - not wordpress_use_external_cache | bool
  tags:
    - wordpress:caching
    - wordpress:memcached

- name: Install PHP Redis extension
  ansible.builtin.package:
    name: "{{ wordpress_php_redis_packages }}"
    state: present
  when: wordpress_enable_redis | bool
  notify: restart php-fpm
  tags:
    - wordpress:caching
    - wordpress:redis
    - wordpress:php

- name: Install PHP Memcached extension
  ansible.builtin.package:
    name: "{{ wordpress_php_memcached_packages }}"
    state: present
  when: wordpress_enable_memcached | bool
  notify: restart php-fpm
  tags:
    - wordpress:caching
    - wordpress:memcached
    - wordpress:php

- name: Configure PHP Redis extension
  ansible.builtin.lineinfile:
    path: "{{ wordpress_php_ini_path }}"
    regexp: '^;?\s*extension=redis'
    line: 'extension=redis'
  when: wordpress_enable_redis | bool
  notify: restart php-fpm
  tags:
    - wordpress:caching
    - wordpress:redis
    - wordpress:php

- name: Configure PHP Memcached extension
  ansible.builtin.lineinfile:
    path: "{{ wordpress_php_ini_path }}"
    regexp: '^;?\s*extension=memcached'
    line: 'extension=memcached'
  when: wordpress_enable_memcached | bool
  notify: restart php-fpm
  tags:
    - wordpress:caching
    - wordpress:memcached
    - wordpress:php

- name: Install Redis Object Cache plugin
  ansible.builtin.get_url:
    url: "https://downloads.wordpress.org/plugin/redis-cache.latest-stable.zip"
    dest: "/tmp/redis-cache.zip"
    mode: '0644'
  when:
    - wordpress_enable_redis | bool
    - wordpress_enable_object_cache | bool
  tags:
    - wordpress:caching
    - wordpress:redis
    - wordpress:plugins

- name: Extract Redis Object Cache plugin
  ansible.builtin.unarchive:
    src: "/tmp/redis-cache.zip"
    dest: "{{ wordpress_install_dir }}/wp-content/plugins/"
    owner: "{{ wordpress_system_user }}"
    group: "{{ wordpress_system_group }}"
    remote_src: true
    creates: "{{ wordpress_install_dir }}/wp-content/plugins/redis-cache"
  when:
    - wordpress_enable_redis | bool
    - wordpress_enable_object_cache | bool
  tags:
    - wordpress:caching
    - wordpress:redis
    - wordpress:plugins

- name: Activate Redis Object Cache plugin
  ansible.builtin.command:
    cmd: >
      wp plugin activate redis-cache --path="{{ wordpress_install_dir }}"
  become: true
  become_user: "{{ wordpress_system_user }}"
  when:
    - wordpress_enable_redis | bool
    - wordpress_enable_object_cache | bool
    - wordpress_install_wpcli | bool
  changed_when: false
  tags:
    - wordpress:caching
    - wordpress:redis
    - wordpress:plugins

- name: Enable Redis Object Cache
  ansible.builtin.command:
    cmd: >
      wp redis enable --path="{{ wordpress_install_dir }}"
  become: true
  become_user: "{{ wordpress_system_user }}"
  when:
    - wordpress_enable_redis | bool
    - wordpress_enable_object_cache | bool
    - wordpress_install_wpcli | bool
  changed_when: false
  failed_when: false
  tags:
    - wordpress:caching
    - wordpress:redis

- name: Create object cache drop-in for Redis
  ansible.builtin.template:
    src: object-cache-redis.php.j2
    dest: "{{ wordpress_install_dir }}/wp-content/object-cache.php"
    owner: "{{ wordpress_system_user }}"
    group: "{{ wordpress_system_group }}"
    mode: '0644'
  when:
    - wordpress_enable_redis | bool
    - wordpress_enable_object_cache | bool
  notify: run wp-cli cache flush
  tags:
    - wordpress:caching
    - wordpress:redis

- name: Create object cache drop-in for Memcached
  ansible.builtin.template:
    src: object-cache-memcached.php.j2
    dest: "{{ wordpress_install_dir }}/wp-content/object-cache.php"
    owner: "{{ wordpress_system_user }}"
    group: "{{ wordpress_system_group }}"
    mode: '0644'
  when:
    - wordpress_enable_memcached | bool
    - wordpress_enable_object_cache | bool
    - not wordpress_enable_redis | bool
  notify: run wp-cli cache flush
  tags:
    - wordpress:caching
    - wordpress:memcached

- name: Configure advanced cache settings for external cache providers
  ansible.builtin.template:
    src: wp-cache-config.php.j2
    dest: "{{ wordpress_install_dir }}/wp-content/advanced-cache.php"
    owner: "{{ wordpress_system_user }}"
    group: "{{ wordpress_system_group }}"
    mode: '0644'
  when: wordpress_use_external_cache | bool
  notify: run wp-cli cache flush
  tags:
    - wordpress:caching
    - wordpress:external-cache

- name: Test Redis connection
  ansible.builtin.command:
    cmd: redis-cli ping
  register: redis_ping
  changed_when: false
  failed_when: false
  when:
    - wordpress_enable_redis | bool
    - not wordpress_use_external_cache | bool
  tags:
    - wordpress:caching
    - wordpress:redis
    - wordpress:test

- name: Test external Redis connection
  ansible.builtin.command:
    cmd: redis-cli -h {{ wordpress_redis_host }} -p {{ wordpress_redis_port }} ping
  register: external_redis_ping
  changed_when: false
  failed_when: false
  when:
    - wordpress_enable_redis | bool
    - wordpress_use_external_cache | bool
  tags:
    - wordpress:caching
    - wordpress:redis
    - wordpress:test

- name: Verify cache configuration
  ansible.builtin.debug:
    msg:
      - "Redis status: {{ 'OK' if redis_ping.stdout == 'PONG' else 'FAILED' }}"
      - "External Redis status: {{ 'OK' if external_redis_ping.stdout == 'PONG' else 'FAILED' }}"
  when:
    - wordpress_enable_redis | bool
    - redis_ping is defined or external_redis_ping is defined
  tags:
    - wordpress:caching
    - wordpress:verify


---
# SSL Certificate Configuration Tasks

- name: Install SSL/TLS packages
  ansible.builtin.package:
    name:
      - openssl
      - ca-certificates
    state: present
    update_cache: "{{ wordpress_update_cache | bool }}"
  become: true

- name: Create SSL certificate directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: true
  loop:
    - /etc/ssl/certs
    - /etc/ssl/private

- name: Install certbot for Let's Encrypt (Debian/Ubuntu)
  ansible.builtin.package:
    name:
      - certbot
      - "python3-certbot-{{ 'apache' if wordpress_web_server == 'apache' else 'nginx' }}"
    state: present
    update_cache: "{{ wordpress_update_cache | bool }}"
  become: true
  when:
    - ansible_os_family == "Debian"
    - wordpress_use_letsencrypt | bool
    - wordpress_enable_ssl | bool

- name: Install certbot for Let's Encrypt (RedHat/CentOS)
  ansible.builtin.package:
    name:
      - certbot
      - "python3-certbot-{{ 'apache' if wordpress_web_server == 'apache' else 'nginx' }}"
    state: present
  become: true
  when:
    - ansible_os_family == "RedHat"
    - wordpress_use_letsencrypt | bool
    - wordpress_enable_ssl | bool

- name: Generate private key for self-signed certificate
  community.crypto.openssl_privatekey:
    path: "{{ wordpress_ssl_certificate_key }}"
    size: 2048
    type: RSA
    owner: root
    group: root
    mode: '0600'
  become: true
  when:
    - wordpress_generate_self_signed_cert | bool
    - wordpress_enable_ssl | bool
    - not wordpress_use_letsencrypt | bool

- name: Generate certificate signing request for self-signed certificate
  community.crypto.openssl_csr:
    path: "/tmp/{{ wordpress_server_name }}.csr"
    privatekey_path: "{{ wordpress_ssl_certificate_key }}"
    common_name: "{{ wordpress_server_name }}"
    subject_alt_name:
      - "DNS:{{ wordpress_server_name }}"
      - "DNS:www.{{ wordpress_server_name }}"
    country_name: "US"
    state_or_province_name: "State"
    locality_name: "City"
    organization_name: "Organization"
    organizational_unit_name: "IT Department"
    email_address: "{{ wordpress_admin_email }}"
  become: true
  when:
    - wordpress_generate_self_signed_cert | bool
    - wordpress_enable_ssl | bool
    - not wordpress_use_letsencrypt | bool

- name: Generate self-signed certificate
  community.crypto.x509_certificate:
    path: "{{ wordpress_ssl_certificate }}"
    privatekey_path: "{{ wordpress_ssl_certificate_key }}"
    csr_path: "/tmp/{{ wordpress_server_name }}.csr"
    provider: selfsigned
    selfsigned_not_after: "+365d"
    owner: root
    group: root
    mode: '0644'
  become: true
  when:
    - wordpress_generate_self_signed_cert | bool
    - wordpress_enable_ssl | bool
    - not wordpress_use_letsencrypt | bool

- name: Remove temporary CSR file
  ansible.builtin.file:
    path: "/tmp/{{ wordpress_server_name }}.csr"
    state: absent
  become: true
  when:
    - wordpress_generate_self_signed_cert | bool
    - wordpress_enable_ssl | bool
    - not wordpress_use_letsencrypt | bool

- name: Stop web server before obtaining Let's Encrypt certificate
  ansible.builtin.service:
    name: "{{ wordpress_web_server_service[wordpress_web_server] }}"
    state: stopped
  become: true
  when:
    - wordpress_use_letsencrypt | bool
    - wordpress_enable_ssl | bool
  register: webserver_stopped

- name: Obtain Let's Encrypt certificate (standalone)
  ansible.builtin.command:
    cmd: >
      certbot certonly
      --standalone
      --non-interactive
      --agree-tos
      --email {{ wordpress_letsencrypt_email }}
      --domains {{ wordpress_server_name }},www.{{ wordpress_server_name }}
      --cert-name {{ wordpress_server_name }}
  become: true
  when:
    - wordpress_use_letsencrypt | bool
    - wordpress_enable_ssl | bool
    - webserver_stopped is changed
  register: letsencrypt_result
  changed_when: letsencrypt_result.rc == 0

- name: Start web server after obtaining certificate
  ansible.builtin.service:
    name: "{{ wordpress_web_server_service[wordpress_web_server] }}"
    state: started
  become: true
  when:
    - wordpress_use_letsencrypt | bool
    - wordpress_enable_ssl | bool
    - webserver_stopped is changed

- name: Update SSL certificate paths for Let's Encrypt
  ansible.builtin.set_fact:
    wordpress_ssl_certificate: "/etc/letsencrypt/live/{{ wordpress_server_name }}/fullchain.pem"
    wordpress_ssl_certificate_key: "/etc/letsencrypt/live/{{ wordpress_server_name }}/privkey.pem"
  when:
    - wordpress_use_letsencrypt | bool
    - wordpress_enable_ssl | bool
    - letsencrypt_result is succeeded

- name: Set up Let's Encrypt certificate renewal
  ansible.builtin.cron:
    name: "Renew Let's Encrypt certificates"
    minute: "0"
    hour: "12"
    day: "*"
    month: "*"
    weekday: "*"
    job: "/usr/bin/certbot renew --quiet && systemctl reload {{ wordpress_web_server_service[wordpress_web_server] }}"
    user: root
    state: present
  become: true
  when:
    - wordpress_use_letsencrypt | bool
    - wordpress_enable_ssl | bool

- name: Create SSL configuration snippet for Nginx
  ansible.builtin.template:
    src: nginx-ssl.conf.j2
    dest: /etc/nginx/snippets/ssl-{{ wordpress_server_name }}.conf
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  when:
    - wordpress_web_server == "nginx"
    - wordpress_enable_ssl | bool
  notify: Reload nginx

- name: Create SSL configuration snippet for Apache
  ansible.builtin.template:
    src: apache-ssl.conf.j2
    dest: "{{ wordpress_apache_conf_path }}/{{ 'conf-available/ssl-' + wordpress_server_name + '.conf' if ansible_os_family == 'Debian' else 'conf.d/ssl-' + wordpress_server_name + '.conf' }}"
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  when:
    - wordpress_web_server == "apache"
    - wordpress_enable_ssl | bool
  notify: Reload apache

- name: Enable SSL configuration for Apache (Debian/Ubuntu)
  ansible.builtin.command:
    cmd: "a2enconf ssl-{{ wordpress_server_name }}"
  become: true
  when:
    - ansible_os_family == "Debian"
    - wordpress_web_server == "apache"
    - wordpress_enable_ssl | bool
  register: enable_ssl_conf_result
  changed_when: "'already enabled' not in enable_ssl_conf_result.stdout"
  notify: Reload apache

- name: Enable SSL module for Apache (Debian/Ubuntu)
  ansible.builtin.command:
    cmd: "a2enmod ssl"
  become: true
  when:
    - ansible_os_family == "Debian"
    - wordpress_web_server == "apache"
    - wordpress_enable_ssl | bool
  register: enable_ssl_mod_result
  changed_when: "'already enabled' not in enable_ssl_mod_result.stdout"
  notify: Restart apache

- name: Generate Diffie-Hellman parameters
  community.crypto.openssl_dhparam:
    path: /etc/ssl/certs/dhparam.pem
    size: 2048
    owner: root
    group: root
    mode: '0644'
  become: true
  when: wordpress_enable_ssl | bool

- name: Create SSL security policy file
  ansible.builtin.template:
    src: ssl-security.conf.j2
    dest: "{{ '/etc/nginx/snippets/ssl-params.conf' if wordpress_web_server == 'nginx' else wordpress_apache_conf_path + '/conf-available/ssl-params.conf' if ansible_os_family == 'Debian' else wordpress_apache_conf_path + '/conf.d/ssl-params.conf' }}"
    owner: root
    group: root
    mode: '0644'
    backup: true
  become: true
  when: wordpress_enable_ssl | bool
  notify: "Reload {{ wordpress_web_server }}"

- name: Enable SSL security parameters for Apache (Debian/Ubuntu)
  ansible.builtin.command:
    cmd: "a2enconf ssl-params"
  become: true
  when:
    - ansible_os_family == "Debian"
    - wordpress_web_server == "apache"
    - wordpress_enable_ssl | bool
  register: enable_ssl_params_result
  changed_when: "'already enabled' not in enable_ssl_params_result.stdout"
  notify: Reload apache

- name: Test SSL certificate validity
  ansible.builtin.command:
    cmd: "openssl x509 -in {{ wordpress_ssl_certificate }} -text -noout"
  register: ssl_cert_test
  changed_when: false
  when: wordpress_enable_ssl | bool
  ignore_errors: true

- name: Display SSL certificate information
  ansible.builtin.debug:
    msg: "SSL certificate is valid and configured"
  when:
    - wordpress_enable_ssl | bool
    - ssl_cert_test is succeeded

- name: Create SSL certificate monitoring script
  ansible.builtin.template:
    src: ssl-monitor.sh.j2
    dest: /usr/local/bin/ssl-monitor.sh
    owner: root
    group: root
    mode: '0755'
  become: true
  when: wordpress_enable_ssl | bool

- name: Schedule SSL certificate monitoring
  ansible.builtin.cron:
    name: "Monitor SSL certificate expiration"
    minute: "0"
    hour: "6"
    day: "*"
    month: "*"
    weekday: "1"
    job: "/usr/local/bin/ssl-monitor.sh"
    user: root
    state: present
  become: true
  when: wordpress_enable_ssl | bool

- name: Configure HSTS (HTTP Strict Transport Security)
  ansible.builtin.blockinfile:
    path: "{{ wordpress_install_dir }}/.htaccess"
    marker: "# {mark} HSTS CONFIGURATION"
    block: |
      # HTTP Strict Transport Security (HSTS)
      <IfModule mod_headers.c>
          Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
      </IfModule>
    insertafter: "# BEGIN WordPress"
    create: true
  become: true
  when:
    - wordpress_web_server == "apache"
    - wordpress_enable_ssl | bool

- name: Force HTTPS redirects in .htaccess
  ansible.builtin.blockinfile:
    path: "{{ wordpress_install_dir }}/.htaccess"
    marker: "# {mark} HTTPS REDIRECT"
    block: |
      # Force HTTPS
      <IfModule mod_rewrite.c>
          RewriteEngine On
          RewriteCond %{HTTPS} off
          RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
      </IfModule>
    insertbefore: "# BEGIN WordPress"
    create: true
  become: true
  when:
    - wordpress_web_server == "apache"
    - wordpress_enable_ssl | bool

- name: Set proper permissions on SSL certificate files
  ansible.builtin.file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  become: true
  loop:
    - { path: "{{ wordpress_ssl_certificate }}", owner: "root", group: "root", mode: "0644" }
    - { path: "{{ wordpress_ssl_certificate_key }}", owner: "root", group: "root", mode: "0600" }
  when:
    - wordpress_enable_ssl | bool
    - not wordpress_use_letsencrypt | bool

- name: Verify SSL configuration
  ansible.builtin.uri:
    url: "https://{{ wordpress_server_name }}"
    method: HEAD
    status_code: [200, 301, 302]
    validate_certs: false
  register: ssl_verification
  when: wordpress_enable_ssl | bool
  ignore_errors: true

- name: Display SSL verification result
  ansible.builtin.debug:
    msg: "SSL is properly configured and accessible"
  when:
    - wordpress_enable_ssl | bool
    - ssl_verification is succeeded
